{"remainingRequest":"C:\\todos\\node_modules\\babel-loader\\lib\\index.js!C:\\todos\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\todos\\src\\store\\modules\\todos.js","dependencies":[{"path":"C:\\todos\\src\\store\\modules\\todos.js","mtime":1607267090318},{"path":"C:\\todos\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\todos\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\todos\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L3RvZG9zL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKdmFyIHN0YXRlID0gewogIHRvZG9zOiBbXQp9Owp2YXIgZ2V0dGVycyA9IHsKICBhbGxUb2RvczogZnVuY3Rpb24gYWxsVG9kb3Moc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS50b2RvczsKICB9Cn07CnZhciBhY3Rpb25zID0gewogIGZldGNoVG9kb3M6IGZ1bmN0aW9uIGZldGNoVG9kb3MoX3JlZikgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIGNvbW1pdCwgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCdodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vdG9kb3MnKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgY29tbWl0KCdzZXRUb2RvcycsIHJlc3BvbnNlLmRhdGEpOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgYWRkVG9kbzogZnVuY3Rpb24gYWRkVG9kbyhfcmVmMiwgdGl0bGUpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICB2YXIgY29tbWl0LCByZXNwb25lOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnBvc3QoJ2h0dHBzOi8vanNvbnBsYWNlaG9sZGVyLnR5cGljb2RlLmNvbS90b2RvcycsIHsKICAgICAgICAgICAgICAgIHRpdGxlOiB0aXRsZSwKICAgICAgICAgICAgICAgIGNvbXBsZXRlZDogZmFsc2UKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXNwb25lID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgY29tbWl0KCduZXdUb2RvJywgcmVzcG9uZS5kYXRhKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKSgpOwogIH0sCiAgZGVsZXRlVG9kbzogZnVuY3Rpb24gZGVsZXRlVG9kbyhfcmVmMywgaWQpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICB2YXIgY29tbWl0OwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYzLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmRlbGV0ZSgnaHR0cHM6Ly9qc29ucGxhY2Vob2xkZXIudHlwaWNvZGUuY29tL3RvZG9zLycgKyBpZCk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgY29tbWl0KCdyZW1vdmVUb2RvJywgaWQpOwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTMpOwogICAgfSkpKCk7CiAgfSwKICBmaWx0ZXJUb2RvczogZnVuY3Rpb24gZmlsdGVyVG9kb3MoX3JlZjQsIGUpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICB2YXIgY29tbWl0LCBsaW1pdCwgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjQuY29tbWl0OwogICAgICAgICAgICAgIC8vIEdldCBzZWxlY3RlZCBudW1iZXIKICAgICAgICAgICAgICBsaW1pdCA9IHBhcnNlSW50KGUudGFyZ2V0Lm9wdGlvbnNbZS50YXJnZXQub3B0aW9ucy5zZWxlY3RlZEluZGV4XS5pbm5lclRleHQpOwogICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gNDsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCJodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vdG9kb3M/X2xpbWl0PSIuY29uY2F0KGxpbWl0KSk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDQuc2VudDsKICAgICAgICAgICAgICBjb21taXQoJ3NldFRvZG9zJywgcmVzcG9uc2UuZGF0YSk7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlNCk7CiAgICB9KSkoKTsKICB9LAogIHVwZGF0ZVRvZG86IGZ1bmN0aW9uIHVwZGF0ZVRvZG8oX3JlZjUsIHVwZFRvZG8pIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU1KCkgewogICAgICB2YXIgY29tbWl0LCByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU1JChfY29udGV4dDUpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDUucHJldiA9IF9jb250ZXh0NS5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmNS5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5wdXQoImh0dHBzOi8vanNvbnBsYWNlaG9sZGVyLnR5cGljb2RlLmNvbS90b2Rvcy8iLmNvbmNhdCh1cGRUb2RvLmlkKSwgdXBkVG9kbyk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDUuc2VudDsKICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKTsKICAgICAgICAgICAgICBjb21taXQoJ3VwZGF0ZVRvZG8nLCByZXNwb25zZS5kYXRhKTsKCiAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU1KTsKICAgIH0pKSgpOwogIH0KfTsKdmFyIG11dGF0aW9ucyA9IHsKICBzZXRUb2RvczogZnVuY3Rpb24gc2V0VG9kb3Moc3RhdGUsIHRvZG9zKSB7CiAgICByZXR1cm4gc3RhdGUudG9kb3MgPSB0b2RvczsKICB9LAogIG5ld1RvZG86IGZ1bmN0aW9uIG5ld1RvZG8oc3RhdGUsIHRvZG8pIHsKICAgIHJldHVybiBzdGF0ZS50b2Rvcy51bnNoaWZ0KHRvZG8pOwogIH0sCiAgcmVtb3ZlVG9kbzogZnVuY3Rpb24gcmVtb3ZlVG9kbyhzdGF0ZSwgaWQpIHsKICAgIHJldHVybiBzdGF0ZS50b2RvcyA9IHN0YXRlLnRvZG9zLmZpbHRlcihmdW5jdGlvbiAodG9kbykgewogICAgICByZXR1cm4gdG9kby5pZCAhPT0gaWQ7CiAgICB9KTsKICB9LAogIHVwZGF0ZVRvZG86IGZ1bmN0aW9uIHVwZGF0ZVRvZG8oc3RhdGUsIHVwZFRvZG8pIHsKICAgIHZhciBpbmRleCA9IHN0YXRlLnRvZG9zLmZpbmRJbmRleChmdW5jdGlvbiAodG9kbykgewogICAgICByZXR1cm4gdG9kby5pZCA9PT0gdXBkVG9kby5pZDsKICAgIH0pOwoKICAgIGlmIChpbmRleCAhPT0gLTEpIHsKICAgICAgc3RhdGUudG9kb3Muc3BsaWNlKGluZGV4LCAxLCB1cGRUb2RvKTsKICAgIH0KICB9Cn07CmV4cG9ydCBkZWZhdWx0IHsKICBzdGF0ZTogc3RhdGUsCiAgZ2V0dGVyczogZ2V0dGVycywKICBhY3Rpb25zOiBhY3Rpb25zLAogIG11dGF0aW9uczogbXV0YXRpb25zCn07"},{"version":3,"sources":["C:/todos/src/store/modules/todos.js"],"names":["axios","state","todos","getters","allTodos","actions","fetchTodos","commit","get","response","data","addTodo","title","post","completed","respone","deleteTodo","id","delete","filterTodos","e","limit","parseInt","target","options","selectedIndex","innerText","updateTodo","updTodo","put","console","log","mutations","setTodos","newTodo","todo","unshift","removeTodo","filter","index","findIndex","splice"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\n\r\nconst state = {\r\n    \r\n    todos: []\r\n\r\n};\r\n\r\nconst getters = {\r\n\r\n    allTodos: (state) => state.todos\r\n\r\n};\r\n\r\nconst actions = {\r\n    \r\n    async fetchTodos({commit}){\r\n        const response = await axios.get('https://jsonplaceholder.typicode.com/todos');\r\n        \r\n        commit('setTodos',response.data);\r\n    },\r\n\r\n    async addTodo({commit},title) {\r\n\r\n        const respone = await axios.post('https://jsonplaceholder.typicode.com/todos',{title,completed:false});\r\n\r\n        commit('newTodo',respone.data);\r\n\r\n    },\r\n\r\n    async deleteTodo({commit},id) {\r\n\r\n        \r\n        await axios.delete('https://jsonplaceholder.typicode.com/todos/' + id);\r\n\r\n        commit('removeTodo',id);\r\n\r\n    },\r\n\r\n    async filterTodos({ commit }, e) {\r\n        \r\n        // Get selected number\r\n        const limit = parseInt(\r\n          e.target.options[e.target.options.selectedIndex].innerText\r\n        );\r\n    \r\n        const response = await axios.get(\r\n            `https://jsonplaceholder.typicode.com/todos?_limit=${limit}`\r\n        );\r\n       \r\n    \r\n        commit('setTodos', response.data);\r\n    },\r\n\r\n    async updateTodo({commit},updTodo) {\r\n        \r\n        const response = await axios.put(\r\n            `https://jsonplaceholder.typicode.com/todos/${updTodo.id}`,\r\n            updTodo\r\n        );\r\n      \r\n        console.log(response.data);\r\n      \r\n        commit('updateTodo', response.data);\r\n    }\r\n\r\n};\r\n\r\nconst mutations = {\r\n    \r\n    setTodos: (state,todos) => (state.todos = todos),\r\n    newTodo: (state,todo) => state.todos.unshift(todo),\r\n    removeTodo:(state,id) => state.todos = state.todos.filter(todo => todo.id !== id),\r\n    updateTodo: (state, updTodo) => {\r\n        const index = state.todos.findIndex(todo => todo.id === updTodo.id);\r\n        if (index !== -1) {\r\n          state.todos.splice(index, 1, updTodo);\r\n        }\r\n    }\r\n\r\n\r\n};\r\n\r\nexport default {\r\n\r\n   state,\r\n   getters,\r\n   actions,\r\n   mutations\r\n\r\n};"]}]}